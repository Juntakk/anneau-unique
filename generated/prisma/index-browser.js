
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  culture: 'culture',
  niveau_de_vie: 'niveau_de_vie',
  avantage_culturel: 'avantage_culturel',
  vocation: 'vocation',
  part_ombre: 'part_ombre',
  specialites: 'specialites',
  particularite: 'particularite',
  experience: 'experience',
  experience_totale: 'experience_totale',
  vaillance: 'vaillance',
  sagesse: 'sagesse',
  corps: 'corps',
  corps_ameliore: 'corps_ameliore',
  coeur: 'coeur',
  coeur_ameliore: 'coeur_ameliore',
  esprit: 'esprit',
  esprit_ameliore: 'esprit_ameliore',
  presence: 'presence',
  athletisme: 'athletisme',
  vigilance: 'vigilance',
  exploration: 'exploration',
  chant: 'chant',
  artisanat: 'artisanat',
  inspiration: 'inspiration',
  voyage: 'voyage',
  intuition: 'intuition',
  guerison: 'guerison',
  courtoisie: 'courtoisie',
  art_de_la_guerre: 'art_de_la_guerre',
  persuasion: 'persuasion',
  discretion: 'discretion',
  fouille: 'fouille',
  chasse: 'chasse',
  enigmes: 'enigmes',
  connaissances: 'connaissances',
  personnalite: 'personnalite',
  deplacement: 'deplacement',
  perception: 'perception',
  survie: 'survie',
  coutume: 'coutume',
  metier: 'metier',
  bonus_degats: 'bonus_degats',
  bonus_degats_distance: 'bonus_degats_distance',
  parade: 'parade',
  bouclier: 'bouclier',
  armure: 'armure',
  casque: 'casque',
  recompenses: 'recompenses',
  vertus: 'vertus',
  endurance: 'endurance',
  endurance_depart: 'endurance_depart',
  fatigue: 'fatigue',
  espoir: 'espoir',
  espoir_depart: 'espoir_depart',
  ombre: 'ombre',
  epuisement: 'epuisement',
  melancolie: 'melancolie',
  blesse: 'blesse',
  communaute: 'communaute',
  points_progression: 'points_progression',
  tresors: 'tresors',
  prestige: 'prestige',
  origine: 'origine',
  guide: 'guide',
  eclaireur: 'eclaireur',
  chasseur: 'chasseur',
  guetteur: 'guetteur',
  lien_communaute: 'lien_communaute',
  sanctuaires: 'sanctuaires',
  garant: 'garant',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WeaponScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  index: 'index',
  niveau: 'niveau',
  degats: 'degats',
  taille: 'taille',
  blessure: 'blessure',
  enc: 'enc',
  nom: 'nom'
};

exports.Prisma.EquipmentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  index: 'index',
  type: 'type',
  nom: 'nom',
  enc: 'enc'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  User: 'User',
  Weapon: 'Weapon',
  Equipment: 'Equipment'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
